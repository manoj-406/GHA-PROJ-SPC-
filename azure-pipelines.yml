name: Spc-stage

pool: Default

pr:
  branches:
    include:
      - Develop  

variables:
      IMAGE_NAME: "spc"
      IMAGE_TAG: "$(Build.BuildId)"

stages:
  - stage: 'Build'
    displayName: 'Docker Build'
    jobs:
      - job: 'Build_Docker_Image'  
        displayName: 'Build Docker Image'
        steps:

          - script: |
              docker build -t $(IMAGE_NAME):$(IMAGE_TAG) .
              docker image ls
            displayName: 'Build Docker Image'

          - script: |
                sudo apt-get install wget apt-transport-https gnupg lsb-release
                wget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | gpg --dearmor | sudo tee /usr/share/keyrings/trivy.gpg > /dev/null
                echo "deb [signed-by=/usr/share/keyrings/trivy.gpg] https://aquasecurity.github.io/trivy-repo/deb $(lsb_release -sc) main" | sudo tee -a /etc/apt/sources.list.d/trivy.list
                sudo apt-get update && sudo apt-get install trivy -y


  - stage: 'Scan'
    displayName: 'Trivy_Scan'  
    jobs:
      - job: 'Scan_Docker_Image'
        displayName: 'trivy'
        steps:
          - script: |
              mkdir -p templates
              curl -L https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/junit.tpl -o templates/junit.tpl
            displayName: 'Download Trivy JUnit Template'


          - task: CmdLine@2

          - script: |
              trivy image --format template --template @/home/ubuntu/templates/junit.tpl -o TEST-trivy_report.xml $(IMAGE_NAME):$(IMAGE_TAG) 
            displayName: 'Scanning_Docker_image'

          - task: CopyFiles@2
            inputs: 
              Contents: '**/TEST-trivy_report.xml'
              TargetFolder: $(Build.ArtifactStagingDirectory)
          
          - script: |
              cat $(Build.ArtifactStagingDirectory)/TEST-trivy_report.xml
            displayName: 'Verify Test Results File'
          

          - task: PublishTestResults@1
            inputs:
              testResultsFiles: '**/TEST-*.xml'

              